#version 450

layout (set = 0, binding = 0) uniform sampler2D inputTexture;

layout (location = 0) in vec2 v_UV;

layout (location = 0) out vec4 o_Color;

layout (constant_id = 0) const float c_Gamma = 2.2;

vec3 ACESFilm(vec3 x)
{
    float a = 2.51f;
    float b = 0.03f;
    float c = 2.43f;
    float d = 0.59f;
    float e = 0.14f;
    return clamp((x*(a*x+b))/(x*(c*x+d)+e), 0.0, 1.0);
}

vec3 Reinhard(vec3 x)
{
	// reinhard tone mapping
    vec3 mapped = x / (x + vec3(1.0));
    // gamma correction 
    return pow(mapped, vec3(1.0 / c_Gamma));
}

void main() 
{
	o_Color = vec4(Reinhard(texture(inputTexture, v_UV).rgb), 1.0);
}